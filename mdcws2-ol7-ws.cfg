#_BEGIN_HEADER_
install
url --url="http://154.2.8.5/repo/OL/7.4/"
network --onboot yes --bootproto=static --ip=154.2.16.11 --netmask=255.255.255.0 --gateway=154.2.16.249 --nameserver=154.2.18.254 --noipv6 --hostname=mdcws2
#_END_HEADER_

text
lang en_US
keyboard us

rootpw  --iscrypted $6$hhPTEpj6$RnG4LVexvkgi3hj/FFKCJbGTpcxHQkcnTMKDQeycUVQysDrk1hct3I25CuKQRTH5GJmtZ/BhuP/rslULXn1lN.

eula --agreed
firstboot --enable

services --enabled=sshd,postfix,gpm,chronyd
services --disabled=ntpd
firewall  --disabled
authconfig --enableshadow --passalgo=sha512
selinux --disabled
timezone --utc America/Chicago

repo --name="EMS"  --baseurl=http://154.2.8.5/repo/custom/7 --cost=1000

%packages
@core
@base
@core
@x11
@gnome-desktop
@gnome-apps
@gnome-desktop
bash-completion
kexec-tools
mailx
vim
ksh
yum-rhn-plugin
pyOpenSSL
python-gudev
python-hwdata
ntpdate
wget
xauth
xorg-x11-apps
xorg-x11-fonts-Type1
xorg-x11-xinit
gparted
tree
lshw
postfix
gpm
chrony
mlocate
-iwl105-firmware
-iwl6000g2b-firmware
-iwl6000g2a-firmware
-iwl4965-firmware
-iwl5000-firmware
-iwl2000-firmware
-iwl7260-firmware
-iwl3160-firmware
-iwl135-firmware
-iwl5150-firmware
-iwl1000-firmware
-iwl7265-firmware
-iwl2030-firmware
-iwl6050-firmware
-iwl100-firmware
-iwl3945-firmware
-iwl6000-firmware
%end



#The pre-install script is not run in the change root environment.
%pre --interpreter /usr/bin/bash

TTY=`tty`
exec < $TTY > $TTY 2> $TTY

#1 Byte = 8 Bit
#1 Kilobyte = 1,024 Bytes
#1 Megabyte = 1,048,576 Bytes
#1 Gigabyte = 1,073,741,824 Bytes
#1 Terabyte = 1,099,511,627,776 Bytes

# drive must be larger than INSTALLSIZE to install OS
# Note: the lsblk will read the entire size of device
#INSTALLSIZE=943718400  #900MB
INSTALLSIZE=64424509440  #60GB
#INSTALLSIZE=107374182400 #100GB
#INSTALLSIZE=128849018880 #120GB
#INSTALLSIZE=20401094656 #19GB for testing vm's

INSTALLDISK=()

declare -A disk_values
declare -A small_disks
declare -A install_values

do_summary () {
	echo
	lsblk -a -i
	echo
}

while read disk size
do

	RAW_SIZE=$(printf '%d\n' $size  2>/dev/null) #Remove the floating points
	echo "DISK: $disk SIZE: $RAW_SIZE "

	#Is the disk large enough for install
	if (($RAW_SIZE > $INSTALLSIZE )); then

	###If disk is large enough to install OS, then add to array
	##echo "Disk $disk is greater than $INSTALLSIZE"
	##INSTALLDISK+=($disk $RAW_SIZE)

	#Add the vaules to assiocative array
	#disk_values[$disk]+="$RAW_SIZE"
	disk_values[$RAW_SIZE]+="$disk" #disk is key
	INSTALLDISKS+=($disk)
	TOTALDISKS+=($disk)
	#2disk_values[$disk]+="$RAW_SIZE" #value is key. This fails,we ended up using pipe to sort

	else
	echo "Disk $disk is smaller than $INSTALLSIZE"
	small_disks[$RAW_SIZE]+="$disk" #disk is key
	BOOTDISKS+=($disk)
	TOTALDISKS+=($disk)
	fi

	#Add the vaules to assiocative array
	#disk_values[$disk]+="$RAW_SIZE"
	#disk_values[disk]=size
	#disk_values=([apple]='100 dollars' [orange]='150 dollars')


done < <(lsblk -a -b -o NAME,SIZE | egrep "^sd|^hd|^vd" | awk ' { print $1 " " $2 } ')

clear
do_summary

echo
echo
echo -en "\\033[1;32m Search complete.  \\033[0;39m"
echo
echo

#Determine if all disk are too small
tLenD=${#INSTALLDISKS[@]}
tLenB=${#BOOTDISKS[@]}
tLenT=${#TOTALDISKS[@]}

if [ ${tLenT} -eq ${tLenB} ] ; then
	echo "All disks are smaller than the INSTALLSIZE of $INSTALLSIZE"
	echo "Set the INSTALLSIZE smaller or check that all disks are present."
	exit 1
fi



#	echo "This is the size of disk_values ass array:"
#	echo ${#disk_values[@]}

#echo "${#INSTALLDISK[@]}"

print_final_install_disk () {

	FINALINSTALLDISK=$(
	for K in "${!disk_values[@]}"
	do echo "$K ${disk_values[$K]}"
	done | sort -n -k1 | head -1 | awk ' { print $2 } ')
	echo
	echo -e "\\033[1;42m We will continue with installation on: \\033[0;39m $FINALINSTALLDISK"
	echo

cat << EOF > /tmp/part-include
ignoredisk --only-use=$FINALINSTALLDISK
zerombr
clearpart --all --drives=$FINALINSTALLDISK --initlabel
bootloader --location=mbr --driveorder=$FINALINSTALLDISK --append="crashkernel=auto rhgb quiet"
part /boot --fstype="ext4" --size=512
part pv.01 --size=1 --grow
volgroup root_vg --pesize=4096 pv.01
logvol / --fstype=ext4 --name=root_lv --vgname=root_vg --size=1 --grow
EOF


	sleep 10
}

final_disk_details () {
	parted -s /dev/$FINALINSTALLDISK print 2>/dev/null
}

if [ ${#disk_values[@]} -gt 1 ] ; then
	echo
	echo "You have more than one install disk:"
	echo "------------------------------------"

	#Since there is more than one large disk for installation
	#We will install on the smallest one in the list.

	#Print the values
	for K in "${!disk_values[@]}"
	do echo "The Hard Disk ${disk_values[$K]} is $K "
	done

	#Determine the smallest of the largest disks
	echo
	echo "The smallest of the larger disk is:"

	for K in "${!disk_values[@]}"
	do echo "$K ${disk_values[$K]}"
	done | sort -n -k1 | head -1 | awk ' { print $2 } '

	print_final_install_disk
	final_disk_details
else
	print_final_install_disk
	final_disk_details
fi

echo
%end

#%pre
#echo "# Ignore USB drives if present" > /tmp/ignoredisk.ks
#usb=`ls -l /dev/disk/by-path/pci-*-usb-* | wc -l`
#if [ $usb -gt 0 ]
#then
#echo "ignoredisk --drives=/dev/disk/by-path/pci-*-usb-*" > /tmp/ignoredisk.ks
#fi
#%end


%pre
#!/bin/sh
# Set swap size
mem=$(cat /proc/meminfo|sed -n "s/MemTotal: *\([0-9]\+\) kB/\1/p")
size=$(( $mem / 2 / 1024 ))
if [ $mem -ge 4194304 ]; then
echo "logvol swap --fstype swap --name=swap_lv --vgname=root_vg --size=$size" > /tmp/swap
else
echo "logvol swap --fstype swap --name=swap_lv --vgname=root_vg --size=2048" > /tmp/swap
fi
%end

##############################################################
# TODO: Add logic for disks over 2TB
##############################################################
# by using       part bioboot --fstype=biosboot --size=1
##############################################################


######################################################
###### Disk Setup
######################################################
%include /tmp/part-include
%include /tmp/swap




%post
exec 1> /dev/console 2>&1
echo "----------------------------------------------------"
echo "---- START disable Oracle REPO..."
echo "----------------------------------------------------"

find / -name \*.repo -print > /tmp/repo.list
find / -name \*.repo -exec rm -f {} \;

rm -f /etc/yum.repos.d/public-yum-ol7.repo

echo "----------------------------------------------------"
echo "---- STOP disable Oracle REPO..."
echo "----------------------------------------------------"

%end

%post --log=/root/ems-post-install.txt
exec 1> /dev/console 2>&1
clear
echo
date
echo
#
echo "****************** -EMS- ORACLE updates REPO *********************"
rpm -ivh http://154.2.8.5/repo/custom/7/ems-rhel7-Oracle-Linux-repo-current.rpm


yum -y remove firstboot
yum -y remove initial-setup
yum -y remove subscription-manager-firstboot
#
yum -y install ems-generate-motd syslinux-extlinux meld
yum -y install vasclnt vasgp
yum -y ems-uvscan-client
#
#yum -y groups install development
%end

#
#
#
%post
#New Puppet 4 agent from EMS repo
#SETUP REPO FIRST
echo "****************** PUPPET  REPO *********************"
yum -y install ems-puppetlabs-pc1-repo-client
yum clean all
#INSTALL PUPPET 4 CLIENT:
yum -y install puppet-agent
ln -s /opt/puppetlabs/bin/facter /usr/bin/facter
#
yum -y install ems-rsa-agent
#
yum -y install ems-sudo-addm
yum -y install ems-sudo-zenoss
yum -y install ems-sudo-linuxpatchadmin
yum -y install git

yum -y install bind-utils
#Fix git client
/usr/bin/wget -O /etc/pki/tls/certs/curl-ca-bundle.crt  http://154.2.8.5/repo/7.1/confs/curl-ca-bundle.crt

%end

%post --log=/root/ems-ICA-Client-install.txt
echo "START :: INSTALLING ICA CLIENT..." > /dev/console
mkdir -p /root/.local/share/applications/

yum -y install ICAClient

#cp /var/opt/quest/vas/certs/CA/* /etc/pki/ca-trust/source/anchors/
#update-ca-trust
#update-ca-trust enable

yum -y install perl-WWW-Curl
/usr/bin/wget -O /usr/bin/c_rehash  http://154.2.8.5/repo/7.1/confs/c_rehash

awk 'BEGIN {c=0;} /BEGIN CERT/{c++} { print > "/opt/Citrix/ICAClient/keystore/cacerts/cert." c ".pem"}' < /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
/usr/bin/c_rehash /opt/Citrix/ICAClient/keystore/cacerts

echo "END :: INSTALLING ICA CLIENT..." > /dev/console
%end


#Is this a VM
%post --log=/root/Is-this-a-vm.txt
if [[ $(/usr/bin/facter virtual) = vmware ]] ; then
	echo "Installing open-vm-tools"
	yum -y install open-vm-tools
else
	echo "This is NOT a VM. No vmware tools needed."
fi
%end

%post
exec 1> /dev/console 2>&1

/usr/bin/wget -O /etc/motd  http://154.2.8.5/repo/7.1/confs/motd
/usr/bin/wget -O /etc/issue  http://154.2.8.5/repo/7.1/confs/issue

/usr/bin/wget -O /etc/dconf/db/gdm.d/01-hide-users  http://154.2.8.5/repo/7.1/confs/01-hide-users
/usr/bin/wget -O /etc/dconf/profile/gdm  http://154.2.8.5/repo/7.1/confs/gdm
touch /etc/dconf/profile/gdm
/usr/bin/dconf update
%end

%post
exec 1> /dev/console 2>&1

cat >> /etc/rsyslog.conf << EOF
authpriv.info     @154.2.8.57
EOF
%end


%post --log=/root/ems-post-install-wgets.txt
exec 1> /dev/console 2>&1

/usr/bin/wget -O /usr/sbin/adjoin-basic http://154.2.8.5/repo/7.1/bins/adjoin-basic
chmod +x /usr/sbin/adjoin-basic

/usr/bin/wget -O /etc/pam.d/system-auth-ac http://154.2.8.5/repo/7.1/confs/system-auth-ac
/usr/bin/wget -O /etc/pam.d/password-auth-ac http://154.2.8.5/repo/7.1/confs/password-auth-ac
/usr/bin/wget -O /etc/security/pwquality.conf  http://154.2.8.5/repo/7.1/confs/pwquality.conf
/usr/bin/wget -O /etc/login.defs http://154.2.8.5/repo/7.1/confs/login.defs
#/usr/bin/wget -O /etc/pam.d/su http://154.2.8.5/repo/7.1/confs/su


#Allow root for initial build
#TODO, Put keys from Satellite
/usr/bin/wget -O /etc/ssh/sshd_config http://154.2.8.5/repo/7.1/confs/sshd_config
#/usr/bin/wget -O /usr/sbin/ems-satellite-register7 http://154.2.8.5/repo/7.1/bins/ems-satellite-register7
#chmod +x /usr/sbin/ems-satellite-register7

/usr/bin/wget -O /etc/pki/tls/certs/RHN-ORG-TRUSTED-SSL-CERT http://154.2.8.5/repo/7.1/bins/RHN-ORG-TRUSTED-SSL-CERT
chmod 644 /etc/pki/tls/certs/RHN-ORG-TRUSTED-SSL-CERT

#Ahhh, the SystemD - tmpwatch replaced with systemd directive
/usr/bin/wget -O /usr/lib/tmpfiles.d/tmp.conf http://154.2.8.5/repo/7.1/confs/tmp.conf

#Fix vm bug
/usr/bin/wget -O /usr/lib/systemd/system/rngd.service http://154.2.8.5/repo/7.1/confs/rngd.service

#Setup Postfix null client
/usr/bin/wget -O /etc/postfix/main.cf  http://154.2.8.5/repo/7.1/confs/main.cf
/usr/bin/wget -O /etc/aliases          http://154.2.8.5/repo/7.1/confs/aliases
/usr/bin/wget -O /etc/chrony.conf      http://154.2.8.5/repo/7.1/confs/chrony.conf
/usr/bin/newaliases

%end

%post --log=/root/ems-post-install-enable-desktop.txt
yum -y remove gnome-initial-setup
yum -y install xorg-x11-server-Xorg
/bin/systemctl set-default graphical.target
%end

%post --log=/root/ems-post-install-adjoin.txt

rm -f /etc/ntp/step-tickers
/usr/sbin/ntpdate -s -b -p 8 -u 154.2.16.240
/usr/sbin/ntpdate 154.2.16.240
sleep 1
/sbin/hwclock --systohc

/usr/sbin/ntpdate 154.2.8.64
sleep 1
/usr/sbin/adjoin-basic
sleep 1
/usr/sbin/adjoin-basic

#TODO - This is still buggy, GUID are off untill a sync happens
%end

%post
cat >> /root/.bash_history << EOF
PS1="\[\033[1;94m\]\\\$HOSTNAME\[\033[0;31m\](\\\$USER)\[\033[0;33m\]:\\\$PWD \[\033[0m\]\\$ "
alias ll='ls -alrth --color=always'
EOF
cat >> /etc/skel/.bashrc << EOF
PS1="\[\033[1;94m\]\\\$HOSTNAME\[\033[0;31m\](\\\$USER)\[\033[0;33m\]:\\\$PWD \[\033[0m\]\\$ "
alias ll='ls -alrth --color=always'
EOF
%end


%post --log=/root/ems-post-final01.txt

cat >> /etc/sysctl.d/ipv6.conf << EOF
net.ipv6.conf.all.disable_ipv6 = 1
EOF

cat >> /etc/sysctl.d/icmp.conf << EOF
net.ipv4.icmp_echo_ignore_broadcasts = 1
EOF


rm -f /etc/ntp/step-tickers
/usr/sbin/ntpdate -s -b -p 8 -u 154.2.16.240
/usr/sbin/ntpdate 154.2.16.240
sleep 3
/sbin/hwclock --systohc
%end

%post --log=/root/ems-post-final02.txt

systemctl disable unbound-anchor.timer
#systemctl disable NetworkManager.service

/usr/bin/wget -O /etc/resolv.conf      http://154.2.8.5/repo/7.1/confs/resolv.conf_APC
#
INTERFACE=`facter interfaces | cut -d, -f1`
echo "PEERDNS=no" >> /etc/sysconfig/network-scripts/ifcfg-$INTERFACE
echo "SEARCH=emss.com" >> /etc/sysconfig/network-scripts/ifcfg-$INTERFACE


/usr/bin/wget -O /etc/postfix/main.cf  http://154.2.8.5/repo/7.1/confs/main.cf
/usr/bin/wget -O /etc/aliases          http://154.2.8.5/repo/7.1/confs/aliases

/usr/bin/wget -O /etc/chrony.conf      http://154.2.8.5/repo/7.1/confs/chrony.conf

/usr/bin/newaliases

#Clean up
yum -y remove rhythmbox cheese

%end

%post --log=/root/ems-printers.txt

yum -y install cups enscript

/usr/bin/wget -O /usr/share/cups/model/xrx7345.ppd http://154.2.8.5/repo/7.1/confs/xrx7345.ppd
/usr/bin/wget -O /etc/enscript.cfg http://154.2.8.5/repo/7.1/confs/enscript.cfg

lpadmin -p color -E -v socket://xapemsc1.southernco.com:9100 -m xrx7345.ppd
lpadmin -d color #Make default

%end

%post --log=/root/ems-email-complete.txt
/usr/bin/echo $HOSTNAME | /usr/bin/mail  mdc@emss.com
%end


reboot
